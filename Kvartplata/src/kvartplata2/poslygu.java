/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kvartplata2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.DefaultListModel;

/**
 *
 * @author Саша
 */
public class poslygu extends javax.swing.JFrame {

    String Default;
    public DefaultListModel model;
    ArrayList al = new ArrayList();
    ArrayList al2 = new ArrayList();
    ArrayList al3 = new ArrayList();
    String Month_Name;
    String CurrentName;
    String NCL;
    String PCL;
    String RL;
    String Counter_Name;
    double Total;
    String total23;
    int Visibility = 0;
    String rate2;
    String RL150;
    int Language;

    /**
     * Creates new form poslygu
     */
    public poslygu(String Month_Name, int Language) {
        this.Month_Name = Month_Name;
        this.Language = Language;
        model = new DefaultListModel();
        initComponents();
        select_counters2();
        labelRate150.setVisible(false);
        fieldRate150.setVisible(false);
        label150.setVisible(false);
        field150.setVisible(false);
        buttonLastMonth.setText("Зберегти дані місяця");
        if (Language == 0) {
            labelOldCounter.setText("Старий показник");
            labelNewCounter.setText("Новий показник");
            labelDifference.setText("Різниця тарифів");
            labelRate.setText("Тариф");
            labelSum.setText("Сума");
            labelRate150.setText("Тариф > 150");
            buttonSave.setText("Зберегти");
            buttonCancel.setText("Назад");
            buttonLastMonth.setText("Імпортувати дані місяця");
            label150.setText("Розрахунок для тарифу >150");
        }
        else {
            labelOldCounter.setText("Old counter");
            labelNewCounter.setText("New counter");
            labelDifference.setText("Rate difference");
            labelRate.setText("Rate");
            labelSum.setText("Sum");
            labelRate150.setText("Rate > 150");
            buttonSave.setText("Save");
            buttonCancel.setText("Back");
            buttonLastMonth.setText("Import month data");
            label150.setText("calculation for rate >150");
        }
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        counterList = new javax.swing.JList();
        labelOldCounter = new javax.swing.JLabel();
        labelNewCounter = new javax.swing.JLabel();
        labelDifference = new javax.swing.JLabel();
        labelRate = new javax.swing.JLabel();
        labelSum = new javax.swing.JLabel();
        labelRate150 = new javax.swing.JLabel();
        fieldPreviousCounter = new javax.swing.JTextField();
        fieldNewCounter = new javax.swing.JTextField();
        fieldRate = new javax.swing.JTextField();
        fieldDifference = new javax.swing.JTextField();
        fieldSum = new javax.swing.JTextField();
        fieldRate150 = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        label150 = new javax.swing.JLabel();
        field150 = new javax.swing.JTextField();
        buttonLastMonth = new javax.swing.JButton();

        counterList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                counterListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(counterList);

        labelOldCounter.setBackground(new java.awt.Color(255, 255, 255));
        labelOldCounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelOldCounter.setText(" Старий показник");
        labelOldCounter.setOpaque(true);
        labelOldCounter.setVerifyInputWhenFocusTarget(false);

        labelNewCounter.setBackground(new java.awt.Color(255, 255, 255));
        labelNewCounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNewCounter.setText("Новий показник");
        labelNewCounter.setOpaque(true);

        labelDifference.setBackground(new java.awt.Color(255, 255, 255));
        labelDifference.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDifference.setText("Різниця тарифів");
        labelDifference.setOpaque(true);

        labelRate.setBackground(new java.awt.Color(255, 255, 255));
        labelRate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRate.setText("Тариф");
        labelRate.setOpaque(true);

        labelSum.setBackground(new java.awt.Color(255, 255, 255));
        labelSum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSum.setText("Сума");
        labelSum.setMaximumSize(new java.awt.Dimension(90, 23));
        labelSum.setMinimumSize(new java.awt.Dimension(90, 23));
        labelSum.setOpaque(true);
        labelSum.setPreferredSize(new java.awt.Dimension(90, 23));
        labelSum.setVerifyInputWhenFocusTarget(false);

        labelRate150.setBackground(new java.awt.Color(255, 255, 255));
        labelRate150.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRate150.setText("Тариф > 150");
        labelRate150.setOpaque(true);

        fieldRate.setDisabledTextColor(new java.awt.Color(204, 204, 204));

        fieldDifference.setEditable(false);

        fieldSum.setEditable(false);
        fieldSum.setMaximumSize(new java.awt.Dimension(90, 23));
        fieldSum.setMinimumSize(new java.awt.Dimension(90, 23));
        fieldSum.setPreferredSize(new java.awt.Dimension(90, 23));

        fieldRate150.setText("0");
        fieldRate150.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldRate150ActionPerformed(evt);
            }
        });

        buttonSave.setText("Зберегти");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonCancel.setText("Назад");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        label150.setBackground(new java.awt.Color(255, 255, 255));
        label150.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label150.setText("Розрахунок для тарифу >150");
        label150.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        label150.setOpaque(true);

        field150.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        buttonLastMonth.setText("Зберегти дані місяця");
        buttonLastMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLastMonthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldRate150, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label150, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(field150)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(buttonLastMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelRate150, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(buttonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelNewCounter, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addComponent(labelOldCounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelDifference, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelSum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fieldSum, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addComponent(fieldRate, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addComponent(fieldPreviousCounter, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addComponent(fieldNewCounter, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addComponent(fieldDifference, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addComponent(buttonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNewCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldNewCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelOldCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldPreviousCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldDifference, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDifference, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelRate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldRate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldSum, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSum, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelRate150, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonSave)
                        .addComponent(buttonCancel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldRate150, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label150, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field150, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLastMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void counterListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_counterListMouseClicked
        int number = counterList.getSelectedIndex();
        int i = (number) * 5;
        CurrentName = (String) counterList.getSelectedValue();
        if ("Електроенергія".equals(CurrentName) && Visibility == 1) {
            labelRate150.setVisible(true);
            fieldRate150.setVisible(true);
            label150.setVisible(true);
            field150.setVisible(true);
        } else {
            labelRate150.setVisible(false);
            fieldRate150.setVisible(false);
            label150.setVisible(false);
            field150.setVisible(false);
        }
        if ("Квартплата".equals(CurrentName) || "Вивіз сміття".equals(CurrentName) || "Газ без лічильника".equals(CurrentName) || "Опалення".equals(CurrentName)) {
            labelOldCounter.setVisible(false);
            fieldPreviousCounter.setVisible(false);
            labelDifference.setVisible(false);
            fieldDifference.setVisible(false);
            labelRate.setVisible(false);
            fieldRate.setVisible(false);
 
        } else {
            labelOldCounter.setVisible(true);
            fieldPreviousCounter.setVisible(true);
            labelDifference.setVisible(true);
            fieldDifference.setVisible(true);
            labelRate.setVisible(true);
            fieldRate.setVisible(true);
        }
        String NC = Double.toString((double) al.get(i));
        fieldNewCounter.setText(NC);
        String PC = Double.toString((double) al.get(i + 1));
        fieldPreviousCounter.setText(PC);
        String RA = Double.toString((double) al.get(i + 2));
        fieldRate.setText(RA);
        fieldRate.setEditable(true);
       fieldNewCounter.setEditable(true);
       fieldPreviousCounter.setEditable(true);
        if ("Холодна вода кухня".equals(CurrentName)) {
            RL = Double.toString((double) al.get(2));
            fieldRate.setText(RL);
            fieldRate.setEditable(false);

        }
        if ("Стоки туалет".equals(CurrentName)) {
            NC = Double.toString((double) al.get(0));
            fieldNewCounter.setText(NC);
            fieldNewCounter.setEditable(false);
            PC = Double.toString((double) al.get(1));
            fieldPreviousCounter.setText(PC);
            fieldPreviousCounter.setEditable(false);
        }
        if ("Стоки кухня".equals(CurrentName)) {
            RL = Double.toString((double) al.get(12));
            fieldRate.setText(RL);
            fieldRate.setEditable(false);
            NC = Double.toString((double) al.get(5));
            fieldNewCounter.setText(NC);
            fieldNewCounter.setEditable(false);
            PC = Double.toString((double) al.get(6));
            fieldPreviousCounter.setText(PC);
            fieldPreviousCounter.setEditable(false);
        }
        
        String CD = Double.toString((double) al.get(i + 3));
        fieldDifference.setText(CD);
        String TO = Double.toString((double) al.get(i + 4));
        fieldSum.setText(TO);
    }//GEN-LAST:event_counterListMouseClicked

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        CurrentName = (String) counterList.getSelectedValue();
        NCL = fieldNewCounter.getText();
        PCL = fieldPreviousCounter.getText();
        RL = fieldRate.getText();
        RL150 = fieldRate150.getText();
        update_counters();

        model.removeAllElements();
        al.clear();
        al2.clear();
        al3.clear();
        select_counters2();
        Total = (double) al3.get(0);
        for (int i = 1; i < al3.size(); i++) {
            Total = Total + (double) al3.get(i);
        }
        String tottal = "%.2f";
        total23 = String.format(Locale.ENGLISH, tottal, Total);
        total();
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonLastMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLastMonthActionPerformed
        buttonLastMonth.setText("Дані збережено");
        update_lastMonth();
    }//GEN-LAST:event_buttonLastMonthActionPerformed

    private void fieldRate150ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRate150ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldRate150ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void select_counters2() {
        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";
        try {
            Class.forName(driver);
            Connection c = DriverManager.getConnection(url, name, password);
            Statement st = c.createStatement();
            String selection = "SELECT * FROM COUNTERS WHERE MONTH_NAME = '%s'";
            String select = String.format(selection, Month_Name);
            ResultSet rs = st.executeQuery(select);
            Visibility = 0;
            while (rs.next()) {
                String text = rs.getString("COUNTER_NAME");
                String new_counter = rs.getString("NEW_COUNTER");
                String previous_counter = rs.getString("PREVIOUS_COUNTER");
                String rate = rs.getString("RATE");
                double counter_difference = Double.parseDouble(new_counter) - Double.parseDouble(previous_counter);
                double total = counter_difference * Double.parseDouble(rate);
                if ("Електроенергія".equals(text) && counter_difference > 150) {
                    Visibility = 1;
                    rate2 = rs.getString("RATE150");
                    fieldRate150.setText(rate2);

                    total = (counter_difference - 150) * Double.parseDouble(rate2) + 150 * Double.parseDouble(rate);
                    String rate3 = String.valueOf(rate2);
                    String total2 = "(%.2f-150)*'%s' + 150 * '%s') = %.2f + %.2f";
                    double c1 = (counter_difference - 150) * Double.parseDouble(rate2);
                    //%.2f
                    double c2 = 150 * Double.parseDouble(rate);
                    String total3 = String.format(Locale.ENGLISH, total2, counter_difference, rate2, rate, c1, c2);
                    field150.setText(total3);
                }
                String nc = "%.2f";
                String nc1 = String.format(Locale.ENGLISH, nc, Double.parseDouble(new_counter));
                Double nc2 = Double.parseDouble(nc1);
                String pc = "%.2f";
                String pc1 = String.format(Locale.ENGLISH, pc, Double.parseDouble(previous_counter));
                Double pc2 = Double.parseDouble(pc1);
                String r = "%.4f";
                String r1 = String.format(Locale.ENGLISH, r, Double.parseDouble(rate));
                Double r2 = Double.parseDouble(r1);
                String cd = "%.2f";
                String cd1 = String.format(Locale.ENGLISH, cd, counter_difference);
                Double cd2 = Double.parseDouble(cd1);
                String t = "%.2f";
                String t1 = String.format(Locale.ENGLISH, t, total);
                Double t2 = Double.parseDouble(t1);
                al.add(nc2);
                al.add(pc2);
                al.add(r2);
                al.add(cd2);
                al.add(t2);
                al2.add(cd2);
                al2.add(t2);
                al2.add(text);
                al3.add(t2);

                model.addElement(text);
                counterList.setModel(model);
            }
            String updation1 = "UPDATE COUNTERS SET COUNTER_DIFFERENCE = '%s', TOTAL = '%s'"
                    + "WHERE COUNTER_NAME = '%s' AND MONTH_NAME = '%s'";
            for (int i = 0; i < al2.size(); i = i + 3) {
                String update1 = String.format(Locale.ENGLISH, updation1, al2.get(i), al2.get(i + 1), al2.get(i + 2), Month_Name);
                st.execute(update1);
            }
        } catch (Exception ex) {
        }

    }

    public void update_counters() {

        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";

        try {
            Class.forName(driver);
            //Регистрируем драйвер
            Connection c = null;//Соединение с БД
            c = DriverManager.getConnection(url, name, password);//Установка соединения с БД
            Statement st = c.createStatement();//Готовим запрос
            String update = "UPDATE COUNTERS SET NEW_COUNTER = '%s', PREVIOUS_COUNTER = '%s', RATE = '%s', "
                    + "RATE150 = '%s' WHERE COUNTER_NAME = '%s' AND MONTH_NAME = '%s'";
            String updation = String.format(Locale.ENGLISH, update, NCL, PCL, RL, RL150, CurrentName, Month_Name);
            st.execute(updation);
            update = "UPDATE DEFAULT_COUNTERS SET  RATE = '%s', RATE2 = '%s' "
                    + "WHERE COUNTER_NAME = '%s' ";
            updation = String.format(Locale.ENGLISH, update, RL, RL150, CurrentName);
            st.execute(updation);
        } catch (ClassNotFoundException | SQLException e) {
            String a = e.getMessage();
        }

    }

    public void update_lastMonth() {
        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";

        try {
            Class.forName(driver);
            //Регистрируем драйвер
            Connection c = null;//Соединение с БД
            c = DriverManager.getConnection(url, name, password);//Установка соединения с БД
            Statement st = c.createStatement();//Готовим запрос
            String update = "UPDATE DEFAULT_COUNTERS SET LAST_FIRST = '%s' WHERE COUNTER_NAME = '%s'";
            for (int i = 0, j = 2; i < al.size(); i = i + 5, j = j + 3) {
               String updation = String.format(update, al.get(i), al2.get(j));
            
                st.execute(updation);
            }

        } catch (ClassNotFoundException | SQLException e) {
            String a = e.getMessage();
        }

    }

    public void total() {

        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";

        try {
            Class.forName(driver);
            //Регистрируем драйвер
            Connection c = null;//Соединение с БД
            c = DriverManager.getConnection(url, name, password);//Установка соединения с БД
            Statement st = c.createStatement();//Готовим запрос
            String update = "UPDATE MONTHS SET MONTH_SUM = '%s' "
                    + "WHERE MONTH_NAME = '%s'";
            String updation = String.format(update, total23, Month_Name);
            st.execute(updation);

        } catch (ClassNotFoundException | SQLException e) {
            String a = e.getMessage();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonLastMonth;
    private javax.swing.JButton buttonSave;
    private javax.swing.JList counterList;
    private javax.swing.JTextField field150;
    private javax.swing.JTextField fieldDifference;
    private javax.swing.JTextField fieldNewCounter;
    private javax.swing.JTextField fieldPreviousCounter;
    private javax.swing.JTextField fieldRate;
    private javax.swing.JTextField fieldRate150;
    private javax.swing.JTextField fieldSum;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label150;
    private javax.swing.JLabel labelDifference;
    private javax.swing.JLabel labelNewCounter;
    private javax.swing.JLabel labelOldCounter;
    private javax.swing.JLabel labelRate;
    private javax.swing.JLabel labelRate150;
    private javax.swing.JLabel labelSum;
    // End of variables declaration//GEN-END:variables
}
