/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kvartplata2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import java.sql.*;
import java.util.ArrayList;

/**
 *
 * @author Саша
 */
public class Kvartplata2 extends javax.swing.JFrame {

    public DefaultListModel model;
    Statement st;
    Connection c;
    ResultSet rs;
    poslygu p;
    newMonth nm;
    String select;
    String selection;
    int number;
    String text;
    String sum;
    String delete;
    String deletion;
    String monthName;
    ArrayList al = new ArrayList();
    ArrayList al2 = new ArrayList();
    String total;
    String TOTAL;
    String totaled;
    String year;
    int Language = 0;
    

    /**
     * Creates new form Kvartplata2
     */
    public Kvartplata2() {
        model = new DefaultListModel();
        initComponents();
        select_month();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        monthList = new javax.swing.JList();
        buttonAdd = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaTotals = new javax.swing.JTextArea();
        fieldYear = new javax.swing.JTextField();
        yearSelector = new javax.swing.JButton();
        buttonLanguage = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        monthList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(monthList);

        buttonAdd.setText("Добавити");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonDelete.setText("Видалити");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        areaTotals.setColumns(20);
        areaTotals.setRows(5);
        jScrollPane2.setViewportView(areaTotals);

        fieldYear.setText("2014");

        yearSelector.setText("Вибрати рік");
        yearSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearSelectorActionPerformed(evt);
            }
        });

        buttonLanguage.setText("УКР");
        buttonLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLanguageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonAdd)
                        .addGap(18, 18, 18)
                        .addComponent(fieldYear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(yearSelector)
                        .addGap(18, 18, 18)
                        .addComponent(buttonLanguage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDelete))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAdd)
                    .addComponent(buttonDelete)
                    .addComponent(yearSelector)
                    .addComponent(fieldYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonLanguage))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void monthListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthListMouseClicked
       monthName = (String) monthList.getSelectedValue();
        select_counters();
       TOTAL = "";  
        for (int i = 0; i < al.size(); i = i + 2) {
            totaled = "'%s' = '%s'";
            TOTAL = TOTAL + String.format(totaled, al.get(i), al.get(i + 1)) + "\n";
        }
        select_total();
        TOTAL = TOTAL + "\n" + "Загальна сума = " + total;
        areaTotals.setText(TOTAL);
        al.clear();
        if (evt.getClickCount() == 2) {
            p = new poslygu(monthName, Language);
            p.setVisible(true);
        }

    }//GEN-LAST:event_monthListMouseClicked

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        nm = new newMonth(Language);
        nm.setVisible(true);
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        delete_month();
        select_month();
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void yearSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearSelectorActionPerformed
       year = fieldYear.getText();
        select_year();
    }//GEN-LAST:event_yearSelectorActionPerformed

    private void buttonLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLanguageActionPerformed
       if (buttonLanguage.getText() == "УКР") 
       {buttonLanguage.setText("ENG");
       buttonAdd.setText("Add");
       yearSelector.setText("Choose year");
       buttonDelete.setText("Delete");
       Language = 1;}
       else {buttonLanguage.setText("УКР");
       Language = 0;
       buttonAdd.setText("Добавити");
       yearSelector.setText("Вибрати рік");
       buttonDelete.setText("Видалити");
       }
    }//GEN-LAST:event_buttonLanguageActionPerformed

    public void select_year() {
        model.removeAllElements();
        monthList.removeAll();
        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";
        try {
            Class.forName(driver);
            c = DriverManager.getConnection(url, name, password);
            st = c.createStatement();
            selection = "SELECT * FROM MONTHS WHERE MONTH_NAME LIKE '%%%s%%'";
            select = String.format(selection, year);
          
            rs = st.executeQuery(select);
            while (rs.next()) {
                number = rs.getInt("NUMBER");
                text = rs.getString("MONTH_NAME");
                sum = rs.getString("MONTH_SUM");
                model.addElement(text);
                monthList.setModel(model);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Kvartplata2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    public void select_month() {
        model.removeAllElements();
        monthList.removeAll();
        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";
        try {
            Class.forName(driver);
            c = DriverManager.getConnection(url, name, password);
            st = c.createStatement();
            select = "SELECT * FROM MONTHS";
            rs = st.executeQuery(select);
            model.removeAllElements();
            while (rs.next()) {
                number = rs.getInt("NUMBER");
                text = rs.getString("MONTH_NAME");
                sum = rs.getString("MONTH_SUM");
                model.addElement(text);
                monthList.setModel(model);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Kvartplata2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    public void select_counters() {
       
        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";
        try {
            Class.forName(driver);
            c = DriverManager.getConnection(url, name, password);
            st = c.createStatement();
            select = "SELECT * FROM COUNTERS WHERE MONTH_NAME = '%s'";
            String select2 = String.format(select, monthName);
            rs = st.executeQuery(select2);
            while (rs.next()) {
                text = rs.getString("COUNTER_NAME");
                sum = rs.getString("TOTAL");
                al.add(text);
                al.add(sum);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Kvartplata2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

      public void delete_month() {
        String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";
        try {
            Class.forName(driver);
            c = DriverManager.getConnection(url, name, password);
            st = c.createStatement();
            deletion = "DELETE FROM MONTHS WHERE MONTH_NAME = '%s'";
            delete = String.format(deletion, monthName);
             st.execute(delete);
            deletion = "DELETE FROM COUNTERS WHERE MONTH_NAME = '%s'";
            delete = String.format(deletion, monthName);
             st.execute(delete);
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Kvartplata2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
      
        public void select_total() {

     String driver = "org.apache.derby.jdbc.ClientDriver";
        String url = "jdbc:derby://localhost:1527/komyn2";
        String name = "aleks";
        String password = "roots";

        try {
            Class.forName(driver);
            //Регистрируем драйвер
            Connection c = null;//Соединение с БД
            c = DriverManager.getConnection(url, name, password);//Установка соединения с БД
            Statement st = c.createStatement();//Готовим запрос
            String selection = "SELECT * FROM MONTHS WHERE MONTH_NAME = '%s'";
            String select = String.format(selection, monthName);
            ResultSet rs = st.executeQuery(select);

            while (rs.next()) {

                total = rs.getString("MONTH_SUM");

            }

        } catch (ClassNotFoundException | SQLException e) {
            String a = e.getMessage();
        }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kvartplata2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kvartplata2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kvartplata2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kvartplata2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kvartplata2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTotals;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JToggleButton buttonLanguage;
    private javax.swing.JTextField fieldYear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList monthList;
    private javax.swing.JButton yearSelector;
    // End of variables declaration//GEN-END:variables
}
